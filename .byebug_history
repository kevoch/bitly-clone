c
url
exit
@urls
c
@url
exit
Url.all
@url
c
url
exit
Url.all
exit
Url.all[1].click_count == Integer
Url.all[1].click_count.inspect
Url.all[1].click_count
Url.all[1]
Url.all
@url.counter_plus
@url
Url.all
c
@url
exit
c
Url.all
url.all
url
params
exit
params[:long_url]
params
Url.all
@short_url
c
url
params[:url]
params[:url[:long]]
params[:url]
params[:long]
params[:url]
params
params[:long_url]
url
exit
Url.all
@url
url
exit
Url.all
url.all
c
exit
params[:long_url]
params.long_url
params[:short_url]
params[:long_url]
params
exit
exi
Url.all
redirect to @url.long_url
@url = Url.where(short_url: @short_url).first
@short_url
c
Url.all
c
Url.all
c
Url.all
c
Url.all
exit
Url.all
exit
url.long_url
url
c
url
c
n
url.short_url
url
c
exit
Url.all
c
n
url
exit
Url.all
exit
Url.all
@url
c
n
params
@short_url
exit
@url
@url = Url.where(short_url: short_url).first
params
short_url
exit
url
exit
Url.all
Uri.all
a = Uri.all
Uri.all
erb :"static/index"
url.short_url
@short_url
params
parmas
url.short_url
short_url
url
exit
url
c
n
url
c
n
c
url
exit
url = Url.create(long_url:params[:long_url])
params[:long_url]
url = Url.create(:long_url)
url = Url.create([:long_url])
url = Url.create(params[:long_url])
params
params.inspect
ar
a
r
exit
short_url
Url.shorten_url
URL.shorten_url
shorten_url
url
URL
@URL
@long_url
url
@short_url
erb :index
URL
url = URL.new
a = URL.all
URL.all
URL
url
urls
params[:urls]
urls
url = URL.create(params[:urls])
url
shorten_url
n
params
url
exit
n
@short_url
url
n
